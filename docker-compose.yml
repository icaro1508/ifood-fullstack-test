version: '3'
services:
  redishost:
    image: redis
    container_name: redishost
    networks:
      - private
    ports:
      - 6379:6379


#  mongodb:
#    image: mongo:4
#    restart: always
#    container_name: mongodb
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: root
#    volumes:
#      - mongodb:/data/db
#    networks:
#      - private
#    ports:
#      - 27017:27017


  service-registry:
    container_name: service-registry
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    environment:
      EUREKA_HOST: service-registry
    networks:
      - private
    ports:
      - 8761:8761


  order-service:
    container_name: order-service
    build:
      context: ./order-service
      dockerfile: Dockerfile
    environment:
      REDIS_HOST: redishost
      REDIS_PORT: 6379
      EUREKA_URI: http://service-registry:8761/eureka
    networks:
      - private
    ports:
      -  8082
    depends_on:
      - redishost
      - service-registry


  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    environment:
      EUREKA_URI: http://service-registry:8761/eureka
    networks:
      - private
      - public
    ports:
      - 8080:8080
    depends_on:
      - service-registry


  client-service:
    container_name: client-service
    build:
      context: ./client-service
      dockerfile: Dockerfile
    environment:
        EUREKA_URI: http://service-registry:8761/eureka
    networks:
      - private
    ports:
      - 8081:8081
    depends_on:
      - service-registry


  front-end:
    container_name: front-end
    build:
      context: ./front-end
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: "http://localhost:8080/api/v1"
    networks:
      - public
    ports:
      - 80:8080


volumes:
    mongodb:
networks:
  public:
    driver: bridge
  private:
    driver: bridge
